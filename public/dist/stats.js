/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!****************************!*\
  !*** ./public/js/stats.js ***!
  \****************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("// get all workout data from back-end\nfetch(\"/api/workouts/range\")\n  .then((response) => {\n    return response.json();\n  })\n  .then((data) => {\n    populateChart(data);\n  });\n\n  //api call to get workouts in a range\nAPI.getWorkoutsInRange();\n\n//generate color palette array\nfunction generatePalette() {\n  const arr = [\n    \"#003f5c\",\n    \"#2f4b7c\",\n    \"#665191\",\n    \"#a05195\",\n    \"#d45087\",\n    \"#f95d6a\",\n    \"#ff7c43\",\n    \"ffa600\",\n    \"#003f5c\",\n    \"#2f4b7c\",\n    \"#665191\",\n    \"#a05195\",\n    \"#d45087\",\n    \"#f95d6a\",\n    \"#ff7c43\",\n    \"ffa600\",\n  ];\n\n  return arr;\n}\n\n//populate charts in workout dashboard line and bar charts\nfunction populateChart(data) {\n  let durations = duration(data);\n  let pounds = calculateTotalWeight(data);\n  let workouts = workoutNames(data);\n  const colors = generatePalette();\n\n  let line = document.querySelector(\"#canvas\").getContext(\"2d\");\n  let bar = document.querySelector(\"#canvas2\").getContext(\"2d\");\n  let pie = document.querySelector(\"#canvas3\").getContext(\"2d\");\n  let pie2 = document.querySelector(\"#canvas4\").getContext(\"2d\");\n\n  let lineChart = new Chart(line, {\n    type: \"line\",\n    data: {\n      labels: [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ],\n      datasets: [\n        {\n          label: \"Workout Duration In Minutes\",\n          backgroundColor: \"red\",\n          borderColor: \"red\",\n          data: durations,\n          fill: false,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      title: {\n        display: true,\n      },\n      scales: {\n        xAxes: [\n          {\n            display: true,\n            scaleLabel: {\n              display: true,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: true,\n            scaleLabel: {\n              display: true,\n            },\n          },\n        ],\n      },\n    },\n  });\n\n  let barChart = new Chart(bar, {\n    type: \"bar\",\n    data: {\n      labels: [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ],\n      datasets: [\n        {\n          label: \"Pounds\",\n          data: pounds,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n            \"rgba(255, 159, 64, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n            \"rgba(255, 159, 64, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: true,\n        text: \"Pounds Lifted\",\n      },\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n        ],\n      },\n    },\n  });\n\n  let pieChart = new Chart(pie, {\n    type: \"pie\",\n    data: {\n      labels: workouts,\n      datasets: [\n        {\n          label: \"Excercises Performed\",\n          backgroundColor: colors,\n          data: durations,\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: true,\n        text: \"Excercises Performed\",\n      },\n    },\n  });\n\n  let donutChart = new Chart(pie2, {\n    type: \"doughnut\",\n    data: {\n      labels: workouts,\n      datasets: [\n        {\n          label: \"Excercises Performed\",\n          backgroundColor: colors,\n          data: pounds,\n        },\n      ],\n    },\n    options: {\n      title: {\n        display: true,\n        text: \"Excercises Performed\",\n      },\n    },\n  });\n}\n\nfunction duration(data) {\n  let durations = [];\n\n  data.forEach((workout) => {\n    workout.exercises.forEach((exercise) => {\n      durations.push(exercise.duration);\n    });\n  });\n\n  return durations;\n}\n\nfunction calculateTotalWeight(data) {\n  let total = [];\n\n  data.forEach((workout) => {\n    workout.exercises.forEach((exercise) => {\n      total.push(exercise.weight);\n    });\n  });\n\n  return total;\n}\n\nfunction workoutNames(data) {\n  let workouts = [];\n\n  data.forEach((workout) => {\n    workout.exercises.forEach((exercise) => {\n      workouts.push(exercise.name);\n    });\n  });\n\n  return workouts;\n}\n\n\n//# sourceURL=webpack://mongoose_skeleton/./public/js/stats.js?");
/******/ })()
;